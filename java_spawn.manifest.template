loader.entrypoint.uri = "file:{{ gramine.libos }}"
libos.entrypoint = "/usr/lib/jvm/msopenjdk-current/bin/java"
loader.argv_src_file = "file:/workspaces/JavaSpawnProcess/jvm_args.txt"
loader.log_level = "debug"

loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}:/usr/lib:/usr/{{ arch_libdir }}"

fs.mounts = [
  { type = "tmpfs", path = "/tmp" },
  { uri = "file:{{ gramine.runtimedir() }}", path = "/lib" },
  { uri = "file:{{ arch_libdir }}", path = "{{ arch_libdir }}" },
  { uri = "file:/usr", path = "/usr" },
  { uri = "file:/workspaces/JavaSpawnProcess/target/classes/com/github/nmwael/jna/Main.class", path = "/workspaces/JavaSpawnProcess/target/classes/com/github/nmwael/jna/Main.class"}
]
#sgx.remote_attestation = "dcap"
sgx.enclave_size = "2G"

# SGX needs minimum 64 threads for loading OpenJDK runtime.
sgx.max_threads = 64
sgx.use_exinfo = true

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:/usr/lib/jvm/msopenjdk-current/bin/java",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr/{{ arch_libdir }}/",
  "file:/usr/lib/jvm/msopenjdk-current/lib/",
  "file:/usr/lib/jvm/msopenjdk-current/conf/security/java.security",
  "file:/workspaces/JavaSpawnProcess/target/classes/com/github/nmwael/jna/Main.class",
  "file:/workspaces/JavaSpawnProcess/jvm_args.txt",
]
